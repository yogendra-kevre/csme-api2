/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.csme.csmeapi.api;


import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.http.MediaType;

import com.csme.csmeapi.dto.Pet;
import com.csme.csmeapi.exception.CustomBodyValidationException;
import com.csme.csmeapi.exception.CustomValidationException;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.Authorization;
import io.swagger.annotations.AuthorizationScope;


@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-12-21T12:17:35.703+04:00[Asia/Muscat]")
@Api(value = "pet", description = "the pet API")
public interface PetApi {

	
	
	 @ApiOperation(value = "Add a new pet to the store", nickname = "addPet", notes = "", authorizations = {
		        @Authorization(value = "petstore_auth", scopes = { 
		            @AuthorizationScope(scope = "write:pets", description = "modify pets in your account"),
		            @AuthorizationScope(scope = "read:pets", description = "read your pets")
		            })    }, tags={ "pet", })
		    @ApiResponses(value = { 
		        @ApiResponse(code = 405, message = "Invalid input") })
		    @RequestMapping(value = "/pet",
		        consumes = { MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE },
		        method = RequestMethod.POST)
		    ResponseEntity<Pet> addPet(@ApiParam(value = "Pet object that needs to be added to the store" ,required=true )  @Valid @RequestBody Pet body
		)throws CustomBodyValidationException ;


    @ApiOperation(value = "Find pet by ID", nickname = "getPetById", notes = "Returns a single pet", response = Pet.class, authorizations = {
        @Authorization(value = "api_key")    }, tags={ "pet", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Pet.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Pet not found") })
    @RequestMapping(value = "/pet/{petId}",
        produces = { MediaType.APPLICATION_JSON_VALUE }, 
        method = RequestMethod.GET)
    ResponseEntity<Pet> getPetForId(@ApiParam(value = "ID of pet to return",required=true) @PathVariable("petId") Long petId
,@RequestParam(value = "userId", required = false) String userId) throws CustomValidationException;



}
